{
    "name": "vodafone/saturn_api",
    "description": "API Saturn",
    "type": "project",
    "keywords": ["vodafone", "mars", "api", "microframework", "rest", "router", "psr7"],
    "license": "MIT",
    "authors": [{
        "name": "Diego FeliÃº",
        "email": "diego.feliud@gmail.com"
    }],
    "require": {
        "php": ">=5.6",
        "davidepastore/slim-validation": "^0.5.1",
        "eloquent/enumeration": "5.1.1",
        "firebase/php-jwt": "^5.0",
        "greenter/xmldsig": "^5.0",
        "illuminate/console": "5.2.45",
        "illuminate/database": "5.2.45",
        "illuminate/filesystem": "5.2.45",
        "illuminate/translation": "5.2.x-dev",
        "monolog/monolog": "^1.17",
        "respect/validation": "^1.1",
        "robmorgan/phinx": "dev-master#4c26aeb",
        "slim/php-view": "^2.0",
        "slim/slim": "^3.9",
        "tuupola/cors-middleware": "0.5.2",
        "tuupola/slim-jwt-auth": "^2.3",
        "vlucas/phpdotenv": "^3.0",
        "zendframework/zend-soap": "^2.7",
        "yajra/laravel-oci8": "^2.4"
    },
    "require-dev": {
        "phpunit/phpunit": "5.7.27",
        "seld/jsonlint": "^1.7",
        "fzaninotto/faker": "^1.7"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/"
        }
    },
    "autoload-dev": {
        "classmap": ["database/"],
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "config": {
        "preferred-install": "dist",
        "sort-packages": true,
        "optimize-autoloader": true,
        "process-timeout": 0,
        "php": "5.6"
    },
    "provide": {
        "psr/log-implementation": "1.0.0"
    },
    "scripts": {
        "post-root-package-install": [
            "php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-install-cmd": [
            "composer dumpautoload -o"
        ],
        "post-update-cmd": [
            "composer dumpautoload -o"
        ],
        "start": "php -S 0.0.0.0:8888 -t public public/index.php",
        "test": "phpunit --colors=always --coverage-clover",
        "refresh-database": "phinx rollback -t0 && phinx migrate && phinx seed:run"
    }
}